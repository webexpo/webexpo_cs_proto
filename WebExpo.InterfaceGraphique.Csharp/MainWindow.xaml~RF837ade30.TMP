<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:WebExpo.InterfaceGraphique"
        xmlns:p="clr-namespace:WebExpo.InterfaceGraphique.Properties"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="WebExpo.InterfaceGraphique.MainWindow"
        xml:lang="fr-CA"
        Title="{x:Static p:Resources.Title}" Height="542" Width="780" FontFamily="Trebuchet MS">
    <Window.Resources>
        <local:PastDataConverter x:Key="PDConverterMean"/>
        <local:PastDataConverter x:Key="PDConverterSD"/>
        <local:PastDataConverter x:Key="PDConverterN" HandleInt="True"/>
        <local:CheckBoxConverter x:Key="CBConverter" />
    </Window.Resources>
    <Grid Margin="6,0,-6.8,-28.2" Height="537" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="589*"/>
            <RowDefinition Height="13*"/>
        </Grid.RowDefinitions>
        <Button Content="{x:Static p:Resources.StartCalculations}" Height="28" Margin="172,474,176,0" VerticalAlignment="Top" Click="LancerCalculs" x:Name="buttonLancer" FontSize="14" />
        <TextBox Name="Observations" HorizontalAlignment="Left" Height="196" Margin="17,28,0,0" AcceptsTab="True"  TextWrapping="Wrap" AcceptsReturn="True" VerticalAlignment="Top" Width="183" TextChanged="ObservationsChanged" >
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
            <Binding Path="Entrs.Observations" Mode="TwoWay" UpdateSourceTrigger="LostFocus" >
                <Binding.ValidationRules>
                    <local:MeasureListValidationRule />
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <Label Content="{x:Static p:Resources.StatModel}" HorizontalAlignment="Left" Height="25" Margin="218,6,0,0" VerticalAlignment="Top" Width="130" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" FontSize="14" />
        <TextBox HorizontalAlignment="Left" Height="20" Margin="521,139,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49" x:Name="muInit" >
            <TextBox.Resources>
                <local:BindingProxy x:Key="boundsProxy">
                    <local:BindingProxy.Bounds>
                        <local:AlternateBounds Min1="50" Max1="120" Min2="-6.908" Max2="4.605" />
                    </local:BindingProxy.Bounds>
                </local:BindingProxy>
            </TextBox.Resources>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
            <Binding Path="ModelParams.InitMu" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:MinMaxValidationRule>
                        <local:MinMaxValidationRule.ValidRange>
                            <local:DoubleRangeChecker
                                    Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                    Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                        </local:MinMaxValidationRule.ValidRange>
                    </local:MinMaxValidationRule>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <Label Name="InitValLabel" HorizontalAlignment="Left" Height="22" Margin="414,117,0,0" VerticalAlignment="Top" Width="100" RenderTransformOrigin="0.5,0.5" Content="Valeurs initiales" />
        <TextBox HorizontalAlignment="Left" Height="20" Margin="521,164,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49" x:Name="sigmaInit" >
            <TextBox.Resources>
                <local:BindingProxy x:Key="boundsProxy">
                    <local:BindingProxy.Bounds>
                        <local:AlternateBounds Min1="0.5" Max1="10" Min2="0.405" Max2="2.303" />
                    </local:BindingProxy.Bounds>
                </local:BindingProxy>
            </TextBox.Resources>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
            <Binding Path="ModelParams.InitSigma" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:MinMaxValidationRule>
                        <local:MinMaxValidationRule.ValidRange>
                            <local:DoubleRangeChecker
                                    Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                    Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                        </local:MinMaxValidationRule.ValidRange>
                    </local:MinMaxValidationRule>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>

        <Label Content="{x:Static p:Resources.InterpretSettings}" HorizontalAlignment="Left" Height="25" Margin="10,229,0,0" VerticalAlignment="Top" Width="196" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" FontSize="14" />
        <Label Content="Observations" HorizontalAlignment="Left" Height="25" Margin="7,5,0,0" VerticalAlignment="Top" Width="94" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" FontSize="14">
            <Label.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="0.747"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Label.RenderTransform>
        </Label>
        <RadioButton Name="DistLogNormale" GroupName="dist" Content="{x:Static p:Resources.LogNorm}" HorizontalAlignment="Left" Margin="225,108,0,0" VerticalAlignment="Top" IsChecked="{Binding ModelParams.LogNormalDstrn, Mode=TwoWay}" Click="ToggleDistributionLogNormal" />
        <RadioButton Name="DistNormale" GroupName="dist" Content="{x:Static p:Resources.Norm}" HorizontalAlignment="Left" Margin="225,126,0,0" VerticalAlignment="Top" Width="68"  Click="ToggleDistributionLogNormal" />
        <Label Content="{x:Static p:Resources.OEL}" HorizontalAlignment="Left" Height="22" Margin="12,262,0,0" VerticalAlignment="Top" Width="146"/>
        <TextBox HorizontalAlignment="Left" Height="22" Margin="172,261,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="43">
            <Binding Path="Entrs.VLE" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:RangeValidationRule Minimum="0" />
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <TextBlock HorizontalAlignment="Left" Height="40" Margin="13,285,0,0" VerticalAlignment="Top" Width="168" >
            <Run Text="{x:Static p:Resources.ProbCred1}" />
            <Run Text="&#xD;&#xA;" />
            <Run Text="{x:Static p:Resources.ProbCred2}" />
        </TextBlock>

        <TextBox HorizontalAlignment="Left" Height="22" Margin="172,291,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="43" >
            <Binding Path="Entrs.ProbCred" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:RangeValidationRule Minimum="1" Maximum="99" />
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <TextBlock HorizontalAlignment="Left" Height="40" Margin="17,315,0,0" VerticalAlignment="Top" Width="169">
            <Run Text="{x:Static p:Resources.Exceedance1}" />
            <Run Text="&#xD;&#xA;" />
            <Run Text="{x:Static p:Resources.Exceedance2}" />
        </TextBlock>
        <TextBox HorizontalAlignment="Left" Height="22" Margin="172,322,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="43" >
            <Binding Path="Entrs.FracDepassementLimite" Mode="TwoWay" UpdateSourceTrigger="LostFocus"  StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:RangeValidationRule Minimum="0.1" Maximum="99" />
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <Label Content="{x:Static p:Resources.CritPercentile}" HorizontalAlignment="Left" Height="25" Margin="12,351,0,0" VerticalAlignment="Top" Width="159"/>
        <TextBox HorizontalAlignment="Left" Height="22" Margin="172,352,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="43" >
            <Binding Path="Entrs.CentileCritique" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}" >
                <Binding.ValidationRules>
                    <local:RangeValidationRule Minimum="1" Maximum="99" />
                </Binding.ValidationRules>
            </Binding>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <Label Content="Paramètres MCMC" HorizontalAlignment="Left" Height="25" Margin="411,6,0,0" VerticalAlignment="Top" Width="159" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" FontSize="14" />
        <Label HorizontalAlignment="Left" Height="25" Margin="414,36,0,0" VerticalAlignment="Top" Width="103" RenderTransformOrigin="0.5,0.5" Content="n itérations" />
        <TextBox HorizontalAlignment="Left" Height="22" Margin="521,35,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49" Text="{Binding MCMCParams.NIter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Label HorizontalAlignment="Left" Height="22" Margin="415,64,0,0" VerticalAlignment="Top" Width="72" RenderTransformOrigin="0.5,0.5" Content="n burn-in" />
        <TextBox HorizontalAlignment="Left" Height="22" Margin="521,62,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49" Text="{Binding MCMCParams.NBurnin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Label HorizontalAlignment="Left" Height="25" Margin="416,91,0,0" VerticalAlignment="Top" Width="92" RenderTransformOrigin="0.5,0.5" Content="n thinning" />
        <TextBox HorizontalAlignment="Left" Height="22" Margin="521,89,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49" Text="{Binding MCMCParams.NThin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <CheckBox HorizontalAlignment="Left" Height="14" Margin="712,36,0,0" VerticalAlignment="Top" Width="16" Click="ToggleBurnin" >
            <Binding Path="MCMCParams.MonitorBurnin" Mode="TwoWay" UpdateSourceTrigger="LostFocus" Converter="{StaticResource CBConverter}" />
        </CheckBox>
        <Label HorizontalAlignment="Left" Height="26" Margin="594,31,0,0" VerticalAlignment="Top" Width="104" RenderTransformOrigin="0.5,0.5" Content="Surveiller burn-in" />

        <TextBlock Name="DAPLabel" HorizontalAlignment="Left" Height="25" Margin="222,234,0,0" VerticalAlignment="Top" Width="247" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" FontSize="14" >
            <Run Text="{x:Static p:Resources.APrioriDist}" />
            <Run FontFamily="Consolas">mu</Run>
            <Run Text="{x:Static p:Resources.And}" />
            <Run FontFamily="Consolas">sigma</Run>
        </TextBlock>
        <TextBox xmlns:k="clr-namespace:WebExpo.InterfaceGraphique" x:Name="MuLwr" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Top" Width="45" TextChanged="TextBox_TextChanged" RenderTransformOrigin="3.077,0.57" Margin="360,262,0,0"  >
            <TextBox.Resources>
                <k:BindingProxy x:Key="boundsProxy">
                    <k:BindingProxy.Bounds>
                        <k:AlternateBounds Min1="20" Max1="85" Min2="-100" Max2="-0.5" />
                    </k:BindingProxy.Bounds>
                </k:BindingProxy>
            </TextBox.Resources>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
            <Binding Path="ModelParams.MuLower" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <k:MinMaxValidationRule>
                        <k:MinMaxValidationRule.ValidRange>
                            <k:DoubleRangeChecker
                                    Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                    Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                        </k:MinMaxValidationRule.ValidRange>
                    </k:MinMaxValidationRule>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <TextBox x:Name="MuUpr" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Top" Width="45" TextChanged="TextBox_TextChanged" RenderTransformOrigin="0.663,1.507" Margin="433,262,0,0">
            <TextBox.Resources>
                <local:BindingProxy x:Key="boundsProxy">
                    <local:BindingProxy.Bounds>
                        <local:AlternateBounds Min1="0.5" Max1="100" Min2="0.5" Max2="100" />
                    </local:BindingProxy.Bounds>
                </local:BindingProxy>
            </TextBox.Resources>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
            <Binding Path="ModelParams.MuUpper" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:MinMaxValidationRule>
                        <local:MinMaxValidationRule.ValidRange>
                            <local:DoubleRangeChecker
                                    Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                    Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                        </local:MinMaxValidationRule.ValidRange>
                    </local:MinMaxValidationRule>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <TextBlock HorizontalAlignment="Left" Margin="231,269,0,0" VerticalAlignment="Top" Width="85">
            <Run Text="{x:Static p:Resources.APrio}" />
            <Run FontFamily="Consolas" >mu</Run>
        </TextBlock>
        <Label Content="Min" HorizontalAlignment="Left" Height="21" Margin="332,264,0,0" VerticalAlignment="Top" Width="30" FontStyle="Italic" FontSize="11"/>
        <Label Content="Max" HorizontalAlignment="Left" Height="28" Margin="405,264,0,0" VerticalAlignment="Top" Width="30" FontStyle="Italic" FontSize="11"/>
        <Label Name="NObservations" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Height="23" Margin="101,8,0,0" VerticalAlignment="Top" Width="102" Content="[0 observations]" FontStyle="Italic" FontSize="10"  />
        <Label FontFamily="Consolas" Content="mu" HorizontalAlignment="Left" Height="24" Margin="427,139,0,0" VerticalAlignment="Top" Width="26"/>
        <Label FontFamily="Consolas" Content="sigma" HorizontalAlignment="Left" Height="25" Margin="427,164,0,0" VerticalAlignment="Top" Width="42"/>
        <Canvas Name="BWCanvas" HorizontalAlignment="Left" Height="216" Margin="465,381,-238,0" VerticalAlignment="Top" Width="525" Panel.ZIndex="103" OpacityMask="#FF681A1A" Background="White" Grid.RowSpan="2">
            <TextBlock HorizontalAlignment="Left" Height="33" VerticalAlignment="Top" Width="366" FontWeight="Bold" FontSize="14">
                <Run>Distribution à priori (inter-travailleurs) sur</Run>
                <Run FontFamily="Consolas">mu</Run>
                <Run>et</Run>
                <Run FontFamily="Consolas">sigma</Run>
            </TextBlock>
            <Label Content="Min" Height="24" Canvas.Left="148" Canvas.Top="33" Width="28" FontStyle="Italic" FontSize="10"/>
            <Label Content="Max" Height="21" Canvas.Left="232" Canvas.Top="33" Width="34" FontStyle="Italic" FontSize="10"/>
            <TextBox Height="22" Canvas.Left="175" TextWrapping="Wrap" Canvas.Top="30" Width="58" TextChanged="TextBox_TextChanged_3">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="20" Max1="85" Min2="-100" Max2="-0.5" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.MuOverallLower" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox Height="22" Canvas.Left="259" TextWrapping="Wrap" Canvas.Top="30" Width="54" RenderTransformOrigin="0.056,0.539">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="85" Max1="140" Min2="0.5" Max2="100" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.MuOverallUpper" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <RadioButton Name="DistribAPBW_Expostats" GroupName="bwmodeltype" Content="Expostats" Height="16" Canvas.Left="19" Canvas.Top="79" Width="72" Click="OptionChecked" IsChecked="True" />
            <Label x:Name="DistribAPBW_ExpostatsLbl1" Content="log.sigma.between.mu" Height="24" Canvas.Left="22" Canvas.Top="100" Width="142" FontFamily="Consolas"/>
            <Label x:Name="DistribAPBW_ExpostatsLbl2" Content="log.sigma.between.prec" Height="24" Canvas.Left="23" Canvas.Top="126" Width="158" FontFamily="Consolas"/>
            <TextBox x:Name="DistribAPBW_ExpostatsLogSigmaBwMu" Height="20" Canvas.Left="175" TextWrapping="Wrap" Canvas.Top="100" Width="58">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="-0.69" Max1="2.30" Min2="-0.9" Max2="0.48" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.LogSigmaBetweenMu" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox x:Name="DistribAPBW_ExpostatsLogSigmaBwPrec" Height="20" Canvas.Left="175" TextWrapping="Wrap" Canvas.Top="127" Width="58">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="0.4" Max1="6.0" Min2="0.4" Max2="6.0" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.LogSigmaBetweenPrec" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox x:Name="DistribAPBW_ExpostatsLogSigmaWiPrec" Height="20" Canvas.Left="175" TextWrapping="Wrap" Canvas.Top="182" Width="58">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="0.4" Max1="6.0" Min2="0.4" Max2="-6.0" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.LogSigmaWithinPrec" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox x:Name="DistribAPBW_ExpostatsLogSigmaWiMu" Height="20" Canvas.Left="175" TextWrapping="Wrap" Canvas.Top="155" Width="59" RenderTransformOrigin="0.973,0.374">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="-0.69" Max1="2.3" Min2="-0.9" Max2="0.48" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.LogSigmaWithinMu" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <RadioButton Name="DistribAPBW_Uniform" GroupName="bwmodeltype" Content="Uniforme" Canvas.Left="238" Canvas.Top="84" Click="OptionChecked" />
            <Label x:Name="DistribAPBW_UniformLbl7" Content="Min" Canvas.Left="339" Canvas.Top="102" FontSize="10" FontStyle="Italic" IsEnabled="False"/>
            <Label x:Name="DistribAPBW_UniformLbl8" Content="Max" Canvas.Left="425" Canvas.Top="102" FontSize="10" FontStyle="Italic" IsEnabled="False"/>
            <Label x:Name="DistribAPBW_UniformLbl5" Content="sigma.between" Canvas.Left="244" Canvas.Top="101" IsEnabled="False" FontFamily="Consolas"/>
            <Label x:Name="DistribAPBW_UniformLbl6" Content="sigma.within" Canvas.Left="245" Canvas.Top="129" IsEnabled="False" FontFamily="Consolas"/>
            <TextBox x:Name="DistribAPBW_UniformSigmaBetweenMin" Height="22" Canvas.Left="367" TextWrapping="Wrap" Canvas.Top="100" Width="53" IsEnabled="False">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="0" Max1="100" Min2="0" Max2="3" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BWUModelParams.SigmaBetweenRange[0]" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox Name="DistribAPBW_UniformSigmaBetweenMax" Height="23" Canvas.Left="452" TextWrapping="Wrap" Canvas.Top="99" Width="58" IsEnabled="False">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="0" Max1="100" Min2="0" Max2="3" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BWUModelParams.SigmaBetweenRange[1]" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox Name="DistribAPBW_UniformSigmaWithinMin" Height="23" Canvas.Left="367" TextWrapping="Wrap" Canvas.Top="129" Width="53" IsEnabled="False">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="0.01" Max1="100" Min2="0.01" Max2="3" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BWUModelParams.SigmaWithinRange[0]" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox Name="DistribAPBW_UniformSigmaWithinMax" Height="23" Canvas.Left="452" TextWrapping="Wrap" Canvas.Top="129" Width="58" IsEnabled="False">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="0.1" Max1="100" Min2="0.01" Max2="3" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BWUModelParams.SigmaWithinRange[1]" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label x:Name="DistribAPBW_UniformLbl7_Copy" Content="Min" Canvas.Left="341" Canvas.Top="132" FontSize="10" FontStyle="Italic" IsEnabled="False"/>
            <Label x:Name="DistribAPBW_UniformLbl8_Copy" Content="Max" Canvas.Left="425" Canvas.Top="133" FontSize="10" FontStyle="Italic" IsEnabled="False"/>
            <Label x:Name="DistribAPBW_ExpostatsLbl1_Copy" Content="log.sigma.within.mu" Height="24" Canvas.Left="23" Canvas.Top="155" Width="138" FontFamily="Consolas"/>
            <Label x:Name="DistribAPBW_ExpostatsLbl2_Copy" Content="log.sigma.within.prec" Height="24" Canvas.Left="23" Canvas.Top="181" Width="148" FontFamily="Consolas"/>
            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Width="85" Canvas.Left="13" Canvas.Top="37"><Run Text="{x:Static p:Resources.APrio}"/><Run Text=" "/><Run FontFamily="Consolas" Text="mu" /></TextBlock>
            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Width="103" Canvas.Left="13" Canvas.Top="59"><Run Text="{x:Static p:Resources.APrio}"/><Run Text=" "/><Run FontFamily="Consolas" Text="sigma" /></TextBlock>
        </Canvas>
        <Canvas Name="BWInitValsCanvas" HorizontalAlignment="Left" Height="76" Margin="630,158,-46,0" VerticalAlignment="Top" Width="168" Background="White">
            <Label Content="Valeurs intiales" Height="22" Width="92"/>
            <Label FontFamily="Consolas" Content="mu.overall" Height="22" Canvas.Top="20" Width="82" Canvas.Left="10"/>
            <TextBox Height="21" Canvas.Left="106" TextWrapping="Wrap" Canvas.Top="24" Width="49">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="50" Max1="120" Min2="-6.908" Max2="4.605" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.InitMuOverall" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label FontFamily="Consolas" Content="sigma.within" Height="22" Canvas.Left="10" Canvas.Top="47" Width="91"/>
            <TextBox Height="21" Canvas.Left="106" TextWrapping="Wrap" Canvas.Top="47" Width="49">
                <TextBox.Resources>
                    <local:BindingProxy x:Key="boundsProxy">
                        <local:BindingProxy.Bounds>
                            <local:AlternateBounds Min1="0.5" Max1="10" Min2="0.095" Max2="2.303" />
                        </local:BindingProxy.Bounds>
                    </local:BindingProxy>
                </TextBox.Resources>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                       PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                          StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="BwModelParams.InitSigmaWithin" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:MinMaxValidationRule>
                            <local:MinMaxValidationRule.ValidRange>
                                <local:DoubleRangeChecker
                                        Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                        Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                            </local:MinMaxValidationRule.ValidRange>
                        </local:MinMaxValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
        </Canvas>
        <RadioButton x:Name="DistriAP_Expostats" GroupName="priorsigma" Content="Expostats" IsChecked="True" Click="OptionChecked" Margin="235,308,440,197.6" />
        <Label x:Name="DistriAP_ExpostatsLbl1" Content="log.sigma.mu" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="93" Margin="242,325,0,0" FontFamily="Consolas" />
        <Label x:Name="DistriAP_ExpostatsLbl2" Content="log.sigma.prec" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="111" Margin="242,351,0,0" FontFamily="Consolas" />
        <CheckBox x:Name="DistriAP_ExpostatsPData" Content="{x:Static p:Resources.ProbCred1}" HorizontalAlignment="Left" Margin="248,377,0,0" VerticalAlignment="Top" Click="OptionChecked"/>
        <TextBox x:Name="DistriAP_ExpostatsPData_Mean" HorizontalAlignment="Left" Height="22" TextWrapping="Wrap" VerticalAlignment="Top" Width="45" Margin="265,408,0,0" Text="{Binding PastData.Mean, Mode=TwoWay, StringFormat=\{0:0.###\}, UpdateSourceTrigger=LostFocus, Converter={StaticResource PDConverterMean}}" IsEnabled="False" />
        <Label x:Name="DistriAP_ExpostatsPData_Lbl1" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="50" Content="mean" Margin="260,387,0,0" IsEnabled="False" />
        <Label x:Name="DistriAP_ExpostatsPData_Lbl2" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Width="23" Content="sd" Margin="312,387,0,0" IsEnabled="False"/>
        <TextBox x:Name="DistriAP_ExpostatsPData_Sd" HorizontalAlignment="Left" Height="22" TextWrapping="Wrap" VerticalAlignment="Top" Width="45" RenderTransformOrigin="0.764,0.609" Margin="315,408,0,0" Text="{Binding PastData.SD, Mode=TwoWay, StringFormat=\{0:0.###\}, UpdateSourceTrigger=LostFocus, Converter={StaticResource PDConverterSD}}" IsEnabled="False" />
        <Label x:Name="DistriAP_ExpostatsPData_Lbl3" HorizontalAlignment="Left" Height="24" VerticalAlignment="Top" Width="17" Content="n" Margin="363,388,0,0" IsEnabled="False"/>
        <TextBox x:Name="DistriAP_ExpostatsPData_N" HorizontalAlignment="Left" Height="22" TextWrapping="Wrap" VerticalAlignment="Top" Width="33" Margin="365,408,0,0" Text="{Binding PastData.N, Mode=TwoWay, StringFormat=\{0:0.###\}, UpdateSourceTrigger=LostFocus, Converter={StaticResource PDConverterN}}" IsEnabled="False"/>
        <TextBox x:Name="DistriAP_ExpostatsLogSigmaMu"  HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Top" Width="45" TextChanged="TextBox_TextChanged" Margin="353,325,0,0" >
            <TextBox.Resources>
                <local:BindingProxy x:Key="boundsProxy">
                    <local:BindingProxy.Bounds>
                        <local:AlternateBounds Min1="-0.90" Max1="0.48" Min2="-0.69" Max2="2.30" />
                    </local:BindingProxy.Bounds>
                </local:BindingProxy>
            </TextBox.Resources>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                        StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
            <Binding Path="ModelParams.LogSigmaMu" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:MinMaxValidationRule>
                        <local:MinMaxValidationRule.ValidRange>
                            <local:DoubleRangeChecker
                                    Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                    Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                        </local:MinMaxValidationRule.ValidRange>
                    </local:MinMaxValidationRule>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <TextBox x:Name="DistriAP_ExpostatsLogSigmaPrec" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Top" Width="45" TextChanged="TextBox_TextChanged" RenderTransformOrigin="0.663,1.507" Margin="353,352,0,0">
            <TextBox.Resources>
                <local:BindingProxy x:Key="boundsProxy">
                    <local:BindingProxy.Bounds>
                        <local:AlternateBounds Min1="0.40" Max1="6.0" Min2="0.40" Max2="6.0" />
                    </local:BindingProxy.Bounds>
                </local:BindingProxy>
            </TextBox.Resources>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                        StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
            <Binding Path="ModelParams.LogSigmaPrec" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                <Binding.ValidationRules>
                    <local:MinMaxValidationRule>
                        <local:MinMaxValidationRule.ValidRange>
                            <local:DoubleRangeChecker
                                    Minimum="{Binding MinValue, Source={StaticResource boundsProxy}}"
                                    Maximum="{Binding MaxValue, Source={StaticResource boundsProxy}}" />
                        </local:MinMaxValidationRule.ValidRange>
                    </local:MinMaxValidationRule>
                </Binding.ValidationRules>
            </Binding>
        </TextBox>
        <RadioButton Width="100" x:Name="DistriAP_Uniforme" GroupName="priorsigma" Content="Uniforme"  Click="OptionChecked" Margin="420,308,232,196.6"/>
        <Label x:Name="DistriAP_UniformeLbl1" Content="sigma.inf" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="70" Margin="423,325,0,0" IsEnabled="False" FontFamily="Consolas" />
        <Label x:Name="DistriAP_UniformeLbl2" Content="sigma.sup" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="78" Margin="423,350,0,0" IsEnabled="False" FontFamily="Consolas" />
        <TextBox x:Name="DistriAP_UniformeSigmaSup" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Top" Width="45" TextChanged="TextBox_TextChanged" RenderTransformOrigin="0.663,1.507" Margin="493,351,0,0" Text="{Binding SDRange[1], Mode=TwoWay, StringFormat='\{0:0.###\} ', UpdateSourceTrigger=LostFocus}" IsEnabled="False" />
        <TextBox x:Name="DistriAP_UniformeSigmaInf" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Top" Width="45" TextChanged="TextBox_TextChanged" RenderTransformOrigin="0.663,1.507" Margin="493,326,0,0" Text="{Binding SDRange[0], Mode=TwoWay, StringFormat='\{0:0.###\} ', UpdateSourceTrigger=LostFocus}" IsEnabled="False"/>
        <Label Content="Distribution" HorizontalAlignment="Left" Margin="219,84,0,0" VerticalAlignment="Top"/>
        <Label Content="Type" HorizontalAlignment="Left" Margin="219,28,0,0" VerticalAlignment="Top"/>
        <RadioButton Name="UseModelGES" Content="{x:Static p:Resources.GES}" GroupName="interp" HorizontalAlignment="Left" Margin="225,52,0,0" VerticalAlignment="Top" Click="ToggleBWModel" IsChecked="True"/>
        <RadioButton Name="UseModelBW" Content="{x:Static p:Resources.BWVariations}" GroupName="interp" HorizontalAlignment="Left" Margin="225,71,0,0" VerticalAlignment="Top" Click="ToggleBWModel" />
        <Label Content="{x:Static p:Resources.MeasErr}" HorizontalAlignment="Left" Margin="218,141,0,0" VerticalAlignment="Top"/>
        <RadioButton GroupName="errmeas" Name="me_none" Content="{x:Static p:Resources.NoError}" HorizontalAlignment="Left" Margin="227,163,0,0" VerticalAlignment="Top" IsChecked="True" Checked="OptionChecked"/>
        <RadioButton GroupName="errmeas" x:Name="me_CV" Content="{x:Static p:Resources.VarCoeff}" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="OptionChecked" Margin="227,182,0,0" />
        <Label x:Name="me_CVLbl1" Content="Min" HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="37" FontStyle="Italic" FontSize="11" IsEnabled="False" Margin="239,201,0,0"/>
        <TextBox x:Name="me_CVMin" HorizontalAlignment="Left" Height="21" TextWrapping="Wrap" VerticalAlignment="Top" Width="45" Text="{Binding MERange.Minimum, Mode=TwoWay, StringFormat=\{0:0.###\}, UpdateSourceTrigger=LostFocus}" RenderTransformOrigin="1.813,3.952" Margin="267,200,0,0" IsEnabled="False" >
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <Label x:Name="me_CVLbl2" Content="Max" HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.921,0.471" FontStyle="Italic" IsEnabled="False" Margin="318,200,0,0" FontSize="11"/>
        <TextBox x:Name="me_CVMax" HorizontalAlignment="Left" Height="21" TextWrapping="Wrap" VerticalAlignment="Top" Width="45" Text="{Binding MERange.Maximum, Mode=TwoWay, StringFormat=\{0:0.###\}, UpdateSourceTrigger=LostFocus}" IsEnabled="False" Margin="348,200,0,0" >
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                            <StackPanel Orientation="Horizontal">
                                <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <Canvas Name="BWWwctCanvas" HorizontalAlignment="Left" Height="89" Margin="12,375,0,0" VerticalAlignment="Top" Width="213">
            <TextBlock Height="40" Width="155">
                <Run Text="{x:Static p:Resources.CorrelThresh}" />
                <Run Text="&#xD;&#xA;" />
                <Run Text="{x:Static p:Resources.WithinWorkers}" />
            </TextBlock>
            <TextBox Height="21" Canvas.Left="160" TextWrapping="Wrap" Canvas.Top="8" Width="43">
                <Binding Path="Entrs.SeuilCorrelationIntraTravailleur" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:RangeValidationRule Minimum="0" Maximum="1" />
                    </Binding.ValidationRules>
                </Binding>
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>
            <Label Content="Couverture du ratio Rb" Height="22" Width="134" Canvas.Top="33"/>
            <TextBox Height="21" Canvas.Left="160" TextWrapping="Wrap" Canvas.Top="34" Width="43">
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                        StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="Entrs.CouvertureRatioRb" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:RangeValidationRule Minimum="0" Maximum="100" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <Label Content="Seuil de probabilité de&#xD;&#xA;surexposition individuelle" Height="40" Width="155" Canvas.Top="51"/>
            <TextBox Height="21" Canvas.Left="160" TextWrapping="Wrap" Canvas.Top="61" Width="43">
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <Grid>
                            <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding AdornedElement.IsFocused, ElementName=placeholder, Mode=OneWay}">
                                <StackPanel Orientation="Horizontal">
                                    <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                        StrokeThickness="2" />
                                    <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="White" />
                                    </Border>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
                <Binding Path="Entrs.SeuilProbSurexpoIndiv" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="{}{0:0.###}">
                    <Binding.ValidationRules>
                        <local:RangeValidationRule Minimum="0" Maximum="100" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
        </Canvas>
        <TextBlock HorizontalAlignment="Left" Margin="231,288,0,0" VerticalAlignment="Top" Width="103"><Run Text="{x:Static p:Resources.APrio}"/><Run Text=" "/><Run FontFamily="Consolas" Text="sigma" /></TextBlock>
        <Label Content="Paramètres sortie" Height="25" Margin="591,7,20,0" VerticalAlignment="Top" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" FontSize="14" />
        <Label HorizontalAlignment="Left" Height="26" Margin="594,114,0,0" VerticalAlignment="Top" Width="104" RenderTransformOrigin="0.5,0.5" Content="Séparateur CSV" />
        <RadioButton Name="CsvSepPV" GroupName="csvsep" Content="Point-virgule" HorizontalAlignment="Left" Margin="604,138,0,0" VerticalAlignment="Top" IsChecked="True" Checked="ToggleCsvSep" />
        <RadioButton GroupName="csvsep" Content="Virgule" HorizontalAlignment="Left" Margin="604,157,0,0" VerticalAlignment="Top" Checked="ToggleCsvSep" />
        <Label Height="40" Margin="594,52,46.4,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Content="Nombre de classes &#xA;des histogrammes" />
        <Slider Name="HistoNumClassesSlider" HorizontalAlignment="Left" Height="22" Margin="607,89,0,0" VerticalAlignment="Top" Width="121" Minimum="20" Maximum="50" Interval="2" TickPlacement="BottomRight" IsSnapToTickEnabled="True" ValueChanged="HistoClassesValueChange" />
        <TextBox Name="HistoNumClasses" HorizontalAlignment="Left" Height="22" Margin="712,62,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="26" Text="{Binding ElementName=HistoNumClassesSlider, Path=Value, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsReadOnly="True" />

    </Grid>
</Window>
